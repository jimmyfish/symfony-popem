function registerAction(n) {
    n.preventDefault();
    var i = jQuery(".content-main"), a = i.find("form"), e = {
        username: a.find("#username").val(),
        email: a.find("#email").val(),
        password: a.find("#password").val(),
        passconf: a.find("#password-confirm").val()
    };
    $.ajax({
        type: "POST", url: "{{ path('popem_api_client_register') }}", data: e, beforeSend: function () {
            a.find("button").val("Memproses ..."), a.find("input, button").prop("disabled", !0), a.find(".spinner").removeClass("hide")
        }, success: function (n) {
            !0 === n.status ? (i.find(".success-notification").removeClass("hide"), i.find(".error-notification").hide(), i.find("form").hide()) : (i.find(".error-notification").removeClass("hide"), i.find(".error-notification").find(".error-notif").text(n.data.message))
        }, complete: function () {
            a.find("input, button").prop("disabled", !1), a.find(".spinner").addClass("hide")
        }
    })
}function depositAction(n) {
    n.preventDefault();
    var i = $(".content-main"), a = i.find("form"), e = new FormData;
    e.append("broker_id", parseInt(a.find("#deposit__broker").val())), e.append("login", parseInt(a.find("#login").val())), e.append("email", a.find("#deposit_email").val()), e.append("phone", a.find("#phone").val()), e.append("bank_name", a.find("#bank_name").val()), e.append("bank_account", parseInt(a.find("#bank_account").val())), e.append("bank_beneficiary_name", a.find("#bank_beneficiary_name").val()), e.append("bank_id", parseInt(a.find("#bank_id").val())), e.append("amount", parseInt(a.find("#amount").val())), e.append("file", a.find("#file")[0].files[0]), $.ajax({
        type: "POST",
        url: "{{ path('popem_api_client_deposit_account') }}",
        data: e,
        contentType: !1,
        processData: !1,
        cache: !1,
        dataType: "json",
        beforeSend: function () {
            i.find("input").prop("disabled", !0), i.find("button").prop("disabled", !0), i.find(".caption").text("Memproses"), i.find(".spinner").removeClass("hide")
        },
        success: function (n) {
            if (1 == n.data.status) {
                var e = i.find(".success-notification"), t = parseInt(n.data.amount_transfer).toLocaleString();
                e.find(".dept_amount").text(t), e.find(".ticket").text(n.data.ticket_number), a.hide(), i.find(".error-notification-depost").hide(), e.removeClass("hide")
            } else i.find(".error-notification-deposit").removeClass("hide"), i.find(".error-notification-deposit").find(".error-notif-deposit").text(n.data.message), a.hide()
        },
        complete: function () {
            a.find("input, button").prop("disabled", !1), a.find(".spinner").addClass("hide")
        },
        error: function (n) {
            console.log(n)
        }
    })
}function withdrawalAccount(n) {
    n.preventDefault();
    var i = jQuery(".content-main"), a = i.find("form"), e = {
        broker_id: parseInt(a.find("#withdrawal_broker_id").val()),
        login: parseInt(a.find("#withdrawal_login").val()),
        phone_password: a.find("#withdrawal_phone_password").val(),
        email: a.find("#withdrawal_email").val(),
        phone: a.find("#withdrawal_phone").val(),
        bank_name: a.find("#withdrawal_bank_name").val(),
        bank_account: a.find("#withdrawal_bank_account").val(),
        bank_beneficiary_name: a.find("#withdrawal_bank_beneficiary_name").val(),
        amount: parseInt(a.find("#withdrawal_amount").val())
    };
    $.ajax({
        type: "POST", url: "{{ path('popem_api_client_withdrawal_account') }}", data: e, beforeSend: function () {
            i.find("input").prop("disabled", !0), i.find("button").prop("disabled", !0), i.find(".caption").text("Memproses"), i.find(".spinner").removeClass("hide")
        }, success: function (n) {
            if (1 == n.data.status) {
                var e = i.find(".success-notification");
                e.find(".ticket").text(n.data.ticket_number), a.hide(), i.find(".error-notification-withdrawal").hide(), e.removeClass("hide")
            } else i.find(".error-notification-withdrawal").removeClass("hide"), i.find(".error-notification-withdrawal").find(".error-notif-withdrawal").text(n.data.message), a.hide()
        }, complete: function () {
            a.find("input, button").prop("disabled", !1), a.find(".spinner").addClass("hide")
        }, error: function (n) {
            console.log(n)
        }
    })
}